survey_var<- paste(colnames(survey)))
# Fixed Effects (survey & subdata variables)
survey_var<- paste(colnames(survey))
class(sub_var)
fixed_var <- survey_var + sub_var
fixed_var <- cbind(survey_var,sub_var)
fixes_var
fixed_var
fixed <- colnames(survey) + colnames(sub_data)
class(colnames(survey))
print(survey_var)
fixed_var <- c(survey_var, sub_var)
fixes_var
fixed_var
# Random Effects (wearable variables)
wearable_var <- paste ("(1|",colnames(final_data), ")")
wearable_var
# Formula
mlm_formula <- as.formula(paste("label ~ ", paste(c(survey_var, wearable_var), collapse= "+")))
mlm_formula
length(fixed_var)
fixed_var <- fixed_var[=c(label)]
fixed_var <- fixed_var[-c(label)]
fixed_var <- fixed_var[-c("label")]
fixed_var <- fixed_var[,-c("label")]
fixed_var <- subset(fixed_var, -c("label"))
fixed_var <- subset(fixed_var, -c(label))
length(fixed_var)
fixed_var
fixed_var <- subset(fixed_var, -c(fixes_var$label))
fixed_var <- subset(fixed_var, -c(fixed_var$label))
fixed_var <- subset(fixed_var, select = -c(label))
fixed_var <- subset(fixed_var, select = -c(label))
length(fixed_var)
fixed_var <- subset(fixed_var, select = -c("label"))
fixed_var <- c(survey_var, sub_var)
length(fixed_var)
fixed_var <- subset(fixed_var, select = -c(label))
class(fixed_var)
fixed_var
fixed_var <- fixed_var[-2]
length(fixed_bar)
length(fixed_var)
length(fixed_var)
colnames(final_data)
# Random Effects (wearable variables)
colnames_nolabel <- colnames(final_data)[-2]
colnames_nolabel
# Random Effects (wearable variables)
wearable_var <- paste ("(1|",colnames(final_data)[-2], ")")
# Formula
mlm_formula <- as.formula(paste("label ~ ", paste(c(survey_var, wearable_var), collapse= "+")))
mlm <- glmer(mlm_formula, data = train, family = binomial)
sapply(all_data, function(x) sum(is.na(x)))
fixed_var
fixed_var <- fixed_var[-c(37:42)]
fixed_var
fixed_var <- fixed_var[-2] #remove label response variable
fixed_var <- fixed_var[-c(37:42)] # removed missing SSSQ variables because of NA
# Random Effects (wearable variables)
wearable_var <- paste ("(1|",colnames(final_data)[-2], ")")
fixed_var <- c(survey_var, sub_var)
fixed_var <- fixed_var[-c(2,37:42)] # removed missing SSSQ variables because of NA
fixed_var
# Formula
mlm_formula <- as.formula(paste("label ~ ", paste(c(survey_var, wearable_var), collapse= "+")))
mlm <- glmer(mlm_formula, data = train, family = binomial)
Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) :
contrasts can be applied only to factors with 2 or more levels
sapply(final_data, function(x) sum(unique(x)))
sapply(final_data, function(x) unique(x))
sapply(final_data, function(x) count(unique(x)))
sapply(final_data, function(x) count(c(unique(x))))
sapply(final_data, function(x) is.na(x))
sapply(final_data, function(x) sum(is.na(x)))
fixed_var
sapply(survey, class)
sapply(sub_data, class)
colnames(full_data)
colnames(all_data)
# Random Effects (wearable variables)
wearable_var <- paste ("(1|",colnames(final_data)[-2], ")")
# Formula
mlm_formula <- as.formula(paste("label ~ ", paste(wearable_var, collapse= "+")))
mlm formula
mlm_formula
sapply(all_data, class)
# Formula
mlm_formula <- as.formula(paste("label ~ ", paste(wearable_var, collapse= "+")))
mlm <- glmer(mlm_formula, data = train, family = binomial)
colnames(all_data)
# Formula
mlm_formula <- as.formula(paste("as.numeric(label) ~ participant + ", paste(wearable_var[9], collapse= "+")))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead"))
# Validate that all necessary packaged have been downloaded, install otherwise or throw err package DNE
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,repos = "http://cran.r-project.org", dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
}
# Installing packages
pkgTest("tidyverse")
pkgTest("knitr")
pkgTest("kableExtra")
pkgTest("caret")
pkgTest("lme4")
# Validate that all necessary packaged have been downloaded, install otherwise or throw err package DNE
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,repos = "http://cran.r-project.org", dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
}
# Installing packages
pkgTest("tidyverse")
pkgTest("knitr")
pkgTest("kableExtra")
pkgTest("caret")
pkgTest("lme4")
library(tidyverse)
library(knitr)
library(kableExtra)
library(caret)
library(lme4)
knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE)
ggplot2::theme_set(new = theme_bw())
survey <- read_csv("survey.csv")
final_data <- readRDS("final_data.Rds")
sub_data <- readRDS("subj_df.Rds")
survey <- survey %>%
rename(label = Label)
sub_data <- sub_data %>%
rename(participant = Participant) %>%
mutate(`Dominant hand` = as.factor(`Dominant hand`),
Gender = as.factor(Gender),
`Height (cm)` = as.double(`Height (cm)`),
`Weight (kg)` = as.double(`Weight (kg)`))
all_data <- final_data %>%
left_join(survey, by=c("participant", "label")) %>%
left_join(sub_data, by=c("participant")) %>%
filter(label != 1) %>%
mutate(label = case_when(
label ==  2 ~ 1,
label == 3 ~ 0,
)) %>%
mutate(label = as.factor(label))
set.seed(20200922)
idx = createDataPartition(all_data$label, p = 0.8, list = FALSE)
train = all_data[idx, ]
test = all_data[-idx, ]
train_control <- trainControl(method="repeatedcv", number = 5, savePredictions = T) # this is the cross validation
lr_model1 <- train(label ~ .,
data = train, trControl = train_control,
method="glm", family="binomial") # simple LR
calc_metrics = function(model) {
list = list()
acc_list = c()
f1_list = c()
AUC_list = c()
for (i in 1:10) {
fold <- model$pred %>% pull(Resample) %>% unique() %>% .[i]
fold_df <- model$pred %>%
filter(Resample == fold)
# accuracy
acc <- mean(fold_df$pred == fold_df$obs)
acc_list[i] <- acc
# F1 score
precision <- posPredValue(fold_df$pred, fold_df$obs, positive="1")
recall <- sensitivity(fold_df$pred, fold_df$obs, positive="1")
F1 <- (2 * precision * recall) / (precision + recall)
f1_list[i] <- F1
# AUC
AUC_list[i] <- cvAUC::AUC(fold_df$pred %>% as.double(), fold_df$obs %>% as.double())
}
acc_mean = acc_list %>% mean(na.rm=T) %>% round_perc()
acc_sd = acc_list %>% sd(na.rm=T) %>% round_perc()
f1_mean = f1_list %>% mean(na.rm=T) %>% round_perc()
f1_sd = f1_list %>% sd(na.rm=T) %>% round_perc()
AUC_mean = AUC_list %>% mean(na.rm=T) %>% round_perc()
AUC_sd = AUC_list %>% sd(na.rm=T) %>% round_perc()
d <- tibble(
Accuracy = paste(acc_mean, "±", acc_sd),
F1 = paste(f1_mean, "±", f1_sd),
AUC = paste(AUC_mean, "±", AUC_sd)
)
return(d)
}
# returns accuracy/F1score/AUC if you run the model using the previous  code
# Fixed Effects (survey & subdata variables)
survey_var<- paste(colnames(survey))
sub_var <- paste(colnames(sub_data))
fixed_var <- c(survey_var, sub_var)
fixed_var <- fixed_var[-c(2,37:42)] # removed missing SSSQ variables because of NA
# Random Effects (wearable variables)
wearable_var <- paste ("(1|",colnames(final_data)[-c(1,2)], ")")
# Formula
mlm_formula <- as.formula(paste("as.numeric(label) ~ participant + ", paste(wearable_var[9], collapse= "+")))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead"))
summary(mlm)
# Formula
mlm_formula <- as.formula(paste("as.numeric(label) ~ participant + ", paste(wearable_var[9:12], collapse= "+")))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead"))
sapply(train, class)
# Formula
mlm_formula <- as.formula(paste("as.numeric(label) ~ participant + ", paste(wearable_var[9:11], collapse= "+")))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead"))
# Formula
mlm_formula <- as.formula(paste("as.numeric(label) ~ participant + ", paste(wearable_var[9], collapse= "+")))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead"))
summary(mlm)
colnames(train)
# Formula
mlm_formula <- as.formula(paste("as.numeric(label) ~ participant + ", paste(wearable_var[9,52], collapse= "+")))
# Formula
mlm_formula <- as.formula(paste("as.numeric(label) ~ participant + ", paste(wearable_var[c(9,52)], collapse= "+")))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead"))
summary(mlm)
colnames(train)
# Formula
mlm_formula <- as.formula(paste("as.numeric(label) ~ participant + ", paste(wearable_var[c(9,53)], collapse= "+")))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead"))
summary(mlm)
colnames(train)
colnames(wearable_var)
wearable_var
# Formula
mlm_formula <- as.formula(paste("as.numeric(label) ~ participant + ", paste(wearable_var[c(9,50)], collapse= "+")))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead"))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead"))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead",check.nobs.vs.nlev="ignore"))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead",check.nobs.vs.nlev="ignore"))
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead")
mlm <- lmer(mlm_formula, data = train, REML=FALSE,control = lmerControl(optimizer ="Nelder_Mead"))
knitr::opts_chunk$set(echo = TRUE)
```{r fig.width = 12,fig.height = 4}
# Correlation plots
# wrist EDA correlation
#can only be saved as png
pairs.panels(EDA_wrist_eng_df[,-c(1,2)],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
main = "Correlation Matrix of Features within EDA signal variable"
)
library(psych)
data <- readRDS("final_data.Rds")
raw_data <- readRDS("chest_and_wrist.Rds")
EDA_wrist_eng_df <- data %>% dplyr::select(participant, label, mean_EDA_wrist:range_EDA_wrist)
library(tidyverse)
library(psych)
library(tidyverse)
library(psych)
data <- readRDS("final_data.Rds")
raw_data <- readRDS("chest_and_wrist.Rds")
EDA_wrist_eng_df <- data %>% dplyr::select(participant, label, mean_EDA_wrist:range_EDA_wrist)
raw_data_mod <- raw_data[!(raw_data$Label==1),]
# chest EDA
chest_EDA <- raw_data_mod %>%
mutate(row = row_number()) %>%
ggplot(aes(x = row, y = EDA, color = as.factor(Label))) +
geom_line() +
scale_x_discrete(labels = abbreviate) +
labs(title = "Chest EDA vs Time by Participant", x="Time", y="EDA (RespiBAN)", caption = "Fig 1.1 Plot of RespiBAN (Chest) EDA samples collected over \n time by participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), , plot.caption = element_text(hjust = 0.5)) +
facet_wrap(Participant~. ,  scales = "free")
# wrist EDA
wrist_EDA <- raw_data_mod %>%
mutate(row = row_number()) %>%
ggplot(aes(x = row, y = EDA_wrist, color = as.factor(Label))) +
geom_line() +
scale_x_discrete(labels = abbreviate) +
labs(title = "Wrist EDA vs Time by Participant", x="Time", y="EDA (E4)", caption = "Fig 1.2 Plot of E4 (Wrist) EDA samples collected over time by \n participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), , plot.caption = element_text(hjust = 0.5)) +
facet_wrap(Participant~. ,  scales = "free")
# ACC plots
data_mod <- data[!(data$label==1),]
peak_wrist_ACC_Z_plot <- ggplot(data_mod, aes(peak_wrist_ACC_Z, color = as.factor(label))) +
geom_histogram(bindwith=30) +
labs(title = "Histogram of Peak Wrist ACC Z samples by Participant", y="Count",x = "Peak Wrist ACC Z", caption = "Fig 2.1 Histogram of peak acc wrist samples  \n by participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), , plot.caption = element_text(hjust = 0.5)) +
facet_wrap(~participant)
mean_ACC_chest_mag_plot <- ggplot(data_mod, aes(mean_ACC_chest_mag, color = as.factor(label))) +
geom_histogram(bindwith=30) +
labs(title = "Histogram of Mean ACC Chest Mag samples by Participant", y="Count", x = "Mean ACC Chest Mag", caption = "Fig 2.2 Histogram of mean acc chest \n magnitude samples by participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5)) +
facet_wrap(~participant)
panel.cor <- function(x, y, ...)
{
par(usr = c(0, 1, 0, 1))
txt <- as.character(format(cor(x, y), digits=2))
text(0.5, 0.5, txt, cex = 6* abs(cor(x, y)))
}
# Correlation plots
# wrist EDA correlation
#can only be saved as png
pairs.panels(EDA_wrist_eng_df[,-c(1,2)],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
main = "Correlation Matrix of Features within EDA signal variable"
)
# Correlation plots
# wrist EDA correlation
#can only be saved as png
pairs.panels(EDA_wrist_eng_df[,-c(1,2)],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
main = "Correlation Matrix of Features within EDA signal variable"
) + labs(caption="Fig. 3 showing the Correlation Matrix of features within one signal variable (EDA)")
library(tidyverse)
library(psych)
data <- readRDS("final_data.Rds")
raw_data <- readRDS("chest_and_wrist.Rds")
EDA_wrist_eng_df <- data %>% dplyr::select(participant, label, mean_EDA_wrist:range_EDA_wrist)
raw_data_mod <- raw_data[!(raw_data$Label==1),]
# chest EDA
chest_EDA <- raw_data_mod %>%
mutate(row = row_number()) %>%
ggplot(aes(x = row, y = EDA, color = as.factor(Label))) +
geom_line() +
scale_x_discrete(labels = abbreviate) +
labs(title = "Chest EDA vs Time by Participant", x="Time", y="EDA (RespiBAN)", caption = "Fig 1.1 Plot of RespiBAN (Chest) EDA samples collected over \n time by participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), , plot.caption = element_text(hjust = 0.5)) +
facet_wrap(Participant~. ,  scales = "free")
# wrist EDA
wrist_EDA <- raw_data_mod %>%
mutate(row = row_number()) %>%
ggplot(aes(x = row, y = EDA_wrist, color = as.factor(Label))) +
geom_line() +
scale_x_discrete(labels = abbreviate) +
labs(title = "Wrist EDA vs Time by Participant", x="Time", y="EDA (E4)", caption = "Fig 1.2 Plot of E4 (Wrist) EDA samples collected over time by \n participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), , plot.caption = element_text(hjust = 0.5)) +
facet_wrap(Participant~. ,  scales = "free")
# ACC plots
data_mod <- data[!(data$label==1),]
peak_wrist_ACC_Z_plot <- ggplot(data_mod, aes(peak_wrist_ACC_Z, color = as.factor(label))) +
geom_histogram(bindwith=30) +
labs(title = "Histogram of Peak Wrist ACC Z samples by Participant", y="Count",x = "Peak Wrist ACC Z", caption = "Fig 2.1 Histogram of peak acc wrist samples  \n by participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), , plot.caption = element_text(hjust = 0.5)) +
facet_wrap(~participant)
mean_ACC_chest_mag_plot <- ggplot(data_mod, aes(mean_ACC_chest_mag, color = as.factor(label))) +
geom_histogram(bindwith=30) +
labs(title = "Histogram of Mean ACC Chest Mag samples by Participant", y="Count", x = "Mean ACC Chest Mag", caption = "Fig 2.2 Histogram of mean acc chest \n magnitude samples by participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5)) +
facet_wrap(~participant)
panel.cor <- function(x, y, ...)
{
par(usr = c(0, 1, 0, 1))
txt <- as.character(format(cor(x, y), digits=2))
text(0.5, 0.5, txt, cex = 6* abs(cor(x, y)))
}
# Correlation plots
# wrist EDA correlation
#can only be saved as png
pairs.panels(EDA_wrist_eng_df[,-c(1,2)],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
main = "Correlation Matrix of Features within EDA signal variable"
) + labs(caption="Fig. 3 showing the Correlation Matrix of features within one signal variable (EDA)")
library(tidyverse)
library(psych)
data <- readRDS("final_data.Rds")
raw_data <- readRDS("chest_and_wrist.Rds")
EDA_wrist_eng_df <- data %>% dplyr::select(participant, label, mean_EDA_wrist:range_EDA_wrist)
raw_data_mod <- raw_data[!(raw_data$Label==1),]
# chest EDA
chest_EDA <- raw_data_mod %>%
mutate(row = row_number()) %>%
ggplot(aes(x = row, y = EDA, color = as.factor(Label))) +
geom_line() +
scale_x_discrete(labels = abbreviate) +
labs(title = "Chest EDA vs Time by Participant", x="Time", y="EDA (RespiBAN)", caption = "Fig 1.1 Plot of RespiBAN (Chest) EDA samples collected over \n time by participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), , plot.caption = element_text(hjust = 0.5)) +
facet_wrap(Participant~. ,  scales = "free")
# wrist EDA
wrist_EDA <- raw_data_mod %>%
mutate(row = row_number()) %>%
ggplot(aes(x = row, y = EDA_wrist, color = as.factor(Label))) +
geom_line() +
scale_x_discrete(labels = abbreviate) +
labs(title = "Wrist EDA vs Time by Participant", x="Time", y="EDA (E4)", caption = "Fig 1.2 Plot of E4 (Wrist) EDA samples collected over time by \n participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), , plot.caption = element_text(hjust = 0.5)) +
facet_wrap(Participant~. ,  scales = "free")
# ACC plots
data_mod <- data[!(data$label==1),]
peak_wrist_ACC_Z_plot <- ggplot(data_mod, aes(peak_wrist_ACC_Z, color = as.factor(label))) +
geom_histogram(bindwith=30) +
labs(title = "Histogram of Peak Wrist ACC Z samples by Participant", y="Count",x = "Peak Wrist ACC Z", caption = "Fig 2.1 Histogram of peak acc wrist samples  \n by participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), , plot.caption = element_text(hjust = 0.5)) +
facet_wrap(~participant)
mean_ACC_chest_mag_plot <- ggplot(data_mod, aes(mean_ACC_chest_mag, color = as.factor(label))) +
geom_histogram(bindwith=30) +
labs(title = "Histogram of Mean ACC Chest Mag samples by Participant", y="Count", x = "Mean ACC Chest Mag", caption = "Fig 2.2 Histogram of mean acc chest \n magnitude samples by participant and label (2- stress, 3-amusement)") +
theme(plot.title = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5)) +
facet_wrap(~participant)
panel.cor <- function(x, y, ...)
{
par(usr = c(0, 1, 0, 1))
txt <- as.character(format(cor(x, y), digits=2))
text(0.5, 0.5, txt, cex = 6* abs(cor(x, y)))
}
gridExtra::grid.arrange(chest_EDA, wrist_EDA, ncol=2)
gridExtra::grid.arrange(peak_wrist_ACC_Z_plot, mean_ACC_chest_mag_plot, ncol=2)
# Correlation plots
# wrist EDA correlation
#can only be saved as png
pairs.panels(EDA_wrist_eng_df[,-c(1,2)],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
main = "Correlation Matrix of Features within EDA signal variable"
) + labs(caption="Fig. 3 showing the Correlation Matrix of features within one signal variable (EDA)")
# Correlation plots
# wrist EDA correlation
#can only be saved as png
pairs.panels(EDA_wrist_eng_df[,-c(1,2)],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
main = "Correlation Matrix of Features within EDA signal variable"
)
wrist <- readRDS("~/Desktop/STA440/STA440_case_study_2/wrist.Rds")
pkgTest("png")
```{r fig.width = 6,fig.height = 4}
img = readPNG("pairs_panel.png")
setwd("~/Desktop/STA440/STA440_case_study_2")
img = readPNG("pairs_panel.png")
# Validate that all necessary packaged have been downloaded, install otherwise or throw err package DNE
pkgTest <- function(x)
{
if (!require(x,character.only = TRUE))
{
install.packages(x,repos = "http://cran.r-project.org", dep=TRUE)
if(!require(x,character.only = TRUE)) stop("Package not found")
}
}
# Installing packages
pkgTest("tidyverse")
pkgTest("knitr")
pkgTest("kableExtra")
pkgTest("caret")
pkgTest("randomForest")
pkgTest("MASS")
pkgTest("cvAUC")
pkgTest("car")
pkgTest("broom")
pkgTest("lme4")
pkgTest("cAIC4")
pkgTest("boot")
pkgTest("cvms")
pkgTest("grid")
pkgTest("gridExtra")
pkgTest("arm")
pkgTest("png")
library(tidyverse)
library(knitr)
library(kableExtra)
library(caret)
library(randomForest)
library(MASS)
library(cvAUC)
library(car)
library(broom)
library(lme4)
library(cAIC4)
library(boot)
library(cvms)
library(grid)
library(gridExtra)
library(png)
knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE)
ggplot2::theme_set(new = theme_bw())
img = readPNG("pairs_panel.png")
img
knitr::include_graphics("pairs_panel.png")
```{r fig.width = 3,fig.height = 2, fig.align='center'}
---
title: "Detecting Stress Using Wearables"
author: "Matty Pahren, Scott Heng On, Ethan Shen"
fontsize: 12pt
geometry: "left=1.3cm,right=1.3cm,top=1.3cm,bottom=1.3cm"
indent: true
header-includes:
- \usepackage{indentfirst}
output:
pdf_document:
latex_engine: xelatex
number_sections: true
---
gridExtra::grid.arrange(pcm1, pcm2, ncol=2,
top = textGrob("Confusion Matrices",gp=gpar(fontsize=12)),
bottom = textGrob("Figure 5.1",gp=gpar(fontsize=12)))
setwd("~/Desktop/COMPSCI325/sta325_case_study")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
data_test <- read.csv(file='data-test.csv')
data_train <- read.csv(file='data-train.csv')
data_test %>% view()
library(tidyverse)
data_test %>% view()
data_train %>% view()
